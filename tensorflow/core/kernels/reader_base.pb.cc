// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/kernels/reader_base.proto

#include "tensorflow/core/kernels/reader_base.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace tensorflow {
constexpr ReaderBaseState::ReaderBaseState(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : current_work_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , work_started_(PROTOBUF_LONGLONG(0))
  , work_finished_(PROTOBUF_LONGLONG(0))
  , num_records_produced_(PROTOBUF_LONGLONG(0)){}
struct ReaderBaseStateDefaultTypeInternal {
  constexpr ReaderBaseStateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReaderBaseStateDefaultTypeInternal() {}
  union {
    ReaderBaseState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReaderBaseStateDefaultTypeInternal _ReaderBaseState_default_instance_;
}  // namespace tensorflow
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ReaderBaseState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::ReaderBaseState, work_started_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ReaderBaseState, work_finished_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ReaderBaseState, num_records_produced_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::ReaderBaseState, current_work_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::ReaderBaseState)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_ReaderBaseState_default_instance_),
};

const char descriptor_table_protodef_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)tensorflow/core/kernels/reader_base.pr"
  "oto\022\ntensorflow\"r\n\017ReaderBaseState\022\024\n\014wo"
  "rk_started\030\001 \001(\003\022\025\n\rwork_finished\030\002 \001(\003\022"
  "\034\n\024num_records_produced\030\003 \001(\003\022\024\n\014current"
  "_work\030\004 \001(\014b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto = {
  false, false, 179, descriptor_table_protodef_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto, "tensorflow/core/kernels/reader_base.proto", 
  &descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto::offsets,
  file_level_metadata_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto, file_level_service_descriptors_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto(&descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto);
namespace tensorflow {

// ===================================================================

class ReaderBaseState::_Internal {
 public:
};

ReaderBaseState::ReaderBaseState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.ReaderBaseState)
}
ReaderBaseState::ReaderBaseState(const ReaderBaseState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  current_work_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_current_work().empty()) {
    current_work_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_current_work(), 
      GetArena());
  }
  ::memcpy(&work_started_, &from.work_started_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_records_produced_) -
    reinterpret_cast<char*>(&work_started_)) + sizeof(num_records_produced_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.ReaderBaseState)
}

void ReaderBaseState::SharedCtor() {
current_work_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&work_started_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_records_produced_) -
    reinterpret_cast<char*>(&work_started_)) + sizeof(num_records_produced_));
}

ReaderBaseState::~ReaderBaseState() {
  // @@protoc_insertion_point(destructor:tensorflow.ReaderBaseState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReaderBaseState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  current_work_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReaderBaseState::ArenaDtor(void* object) {
  ReaderBaseState* _this = reinterpret_cast< ReaderBaseState* >(object);
  (void)_this;
}
void ReaderBaseState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReaderBaseState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReaderBaseState::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.ReaderBaseState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_work_.ClearToEmpty();
  ::memset(&work_started_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_records_produced_) -
      reinterpret_cast<char*>(&work_started_)) + sizeof(num_records_produced_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReaderBaseState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 work_started = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          work_started_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 work_finished = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          work_finished_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 num_records_produced = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num_records_produced_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes current_work = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_current_work();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReaderBaseState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.ReaderBaseState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 work_started = 1;
  if (this->work_started() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_work_started(), target);
  }

  // int64 work_finished = 2;
  if (this->work_finished() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_work_finished(), target);
  }

  // int64 num_records_produced = 3;
  if (this->num_records_produced() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_num_records_produced(), target);
  }

  // bytes current_work = 4;
  if (this->current_work().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_current_work(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.ReaderBaseState)
  return target;
}

size_t ReaderBaseState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.ReaderBaseState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes current_work = 4;
  if (this->current_work().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_current_work());
  }

  // int64 work_started = 1;
  if (this->work_started() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_work_started());
  }

  // int64 work_finished = 2;
  if (this->work_finished() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_work_finished());
  }

  // int64 num_records_produced = 3;
  if (this->num_records_produced() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_num_records_produced());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReaderBaseState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.ReaderBaseState)
  GOOGLE_DCHECK_NE(&from, this);
  const ReaderBaseState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReaderBaseState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.ReaderBaseState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.ReaderBaseState)
    MergeFrom(*source);
  }
}

void ReaderBaseState::MergeFrom(const ReaderBaseState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.ReaderBaseState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current_work().size() > 0) {
    _internal_set_current_work(from._internal_current_work());
  }
  if (from.work_started() != 0) {
    _internal_set_work_started(from._internal_work_started());
  }
  if (from.work_finished() != 0) {
    _internal_set_work_finished(from._internal_work_finished());
  }
  if (from.num_records_produced() != 0) {
    _internal_set_num_records_produced(from._internal_num_records_produced());
  }
}

void ReaderBaseState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.ReaderBaseState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReaderBaseState::CopyFrom(const ReaderBaseState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.ReaderBaseState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReaderBaseState::IsInitialized() const {
  return true;
}

void ReaderBaseState::InternalSwap(ReaderBaseState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  current_work_.Swap(&other->current_work_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReaderBaseState, num_records_produced_)
      + sizeof(ReaderBaseState::num_records_produced_)
      - PROTOBUF_FIELD_OFFSET(ReaderBaseState, work_started_)>(
          reinterpret_cast<char*>(&work_started_),
          reinterpret_cast<char*>(&other->work_started_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReaderBaseState::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fkernels_2freader_5fbase_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::ReaderBaseState* Arena::CreateMaybeMessage< ::tensorflow::ReaderBaseState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::ReaderBaseState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
